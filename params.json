{"name":"ext","tagline":"a commandline TYPO3 extension repository client","body":"============================\r\next - commandline ter client \r\n============================\r\n\r\n * Author: Elmar Hinz <t3elmar@googlemail.com>\r\n * Homepage: http://t3elmar.github.com/Ext/\r\n * Version: 1.0.0\r\n * Stability: Alpha/Usable\r\n * Last update: 2013-03-18\r\n * OS: POSIX i.e. Mac OS X, Unix, Linux, BSD\r\n * Dependencies: \r\n   * php > 5.3 with SOAP\r\n   * https://github.com/t3elmar/Cool\r\n   * https://github.com/etobi/Typo3ExtensionUtils (from Tobias Liebig)\r\n   * git (recommended for installation)\r\n\r\nInstallation\r\n============\r\n\r\nWith git\r\n--------\r\n\r\nI suggest to use copy and paste, all at once.\r\n\r\n```sh\r\n# 1.) install Cool\r\n\r\ngit clone https://github.com/t3elmar/Cool.git\r\n\r\n# 2.) install 2 modules\r\n\r\ncd Cool/Modules\r\n\r\ngit clone https://github.com/etobi/Typo3ExtensionUtils.git\r\ngit clone https://github.com/t3elmar/Ext.git\r\n\r\n# 3.) make ext executable and install an alias named ext\r\n\r\ncd Ext/bin\r\n\r\nchmod +x ext\r\n./ext install \r\n```\r\n\r\nThe advantage with git is, that you can simply update with pull requests\r\nand change back to an older version, if anything breaks.\r\n\r\nWith wget and tar\r\n-----------------\r\n\r\nI suggest to use copy and paste, all at once.\r\n\r\n```sh\r\n# 1.) install Cool\r\n\r\nwget https://github.com/t3elmar/Cool/tarball/master -O cool.tgz\r\ntar xzf cool.tgz\r\nmv t3elmar-* Cool\r\nrm cool.tgz\r\n\r\n# 2.) install 2 modules\r\n\r\ncd Cool/Modules/\r\n\r\nwget https://github.com/etobi/Typo3ExtensionUtils/tarball/master -O t3eu.tgz\r\ntar xzf t3eu.tgz \r\nmv etobi-* Typo3ExtensionUtils\r\nrm t3eu.tgz\r\n\r\nwget https://github.com/t3elmar/Ext/tarball/master -O ext.tgz\r\ntar xzf ext.tgz\r\nmv t3elmar-* Ext\r\nrm ext.tgz\r\n\r\n# 3.) make ext executable and install an alias named ext\r\n\r\ncd Ext/bin\r\n\r\nchmod +x ext\r\n./ext install\r\n```\r\n\r\nUsage\r\n=====\r\n\r\n```sh\r\n  ext description                          => get the description\r\n  ext description 'my text here'           => set the description\r\n  ext help                                 => this help\r\n  ext install                              => support to install\r\n  ext list                                 => list settings (alias show, info)\r\n  ext property 'mykey'                     => get a property (alias get)\r\n  ext property 'mykey' 'myvalue'           => set a property (alias set)\r\n  ext status                               => get the status\r\n  ext status 'alpha'                       => set the status to alpha\r\n  ext ter                                  => nothing happens\r\n  ext ter info 'ext_key'                   => get extension info\r\n  ext ter info 'ext_key' 'xx.xx.xx'        => get extension info for version xx.xx.xx\r\n  ext upload 'password'                    => upload extension\r\n  ext upload 'password' 'upload comment'   => upload extension with new comment\r\n  ext user                                 => get the TER username\r\n  ext user 'myname'                        => set the TER username\r\n  ext version                              => get the version\r\n  ext version 'xx.xx.xx'                   => set the extension version xx.xx.xx\r\n```\r\n\r\nWhy to use it?\r\n===============\r\n\r\nSpeed\r\n-----\r\n\r\nOnce you are used to it, it is much faster, to upload extensions from commandline.\r\n\r\nScriptablity\r\n------------\r\n\r\nYou can make the extension upload to TER a part of your testing and deployment scripts.\r\n\r\nIndependency\r\n------------\r\n\r\nYou are independent form any installed TYPO3 instance.\r\n\r\nIn a typical vagrant development environments you run TYPO3 in virtual machines, \r\nwhile you edit the code directly on the host, that is mounted into the machines.\r\nIn example only the folder typ3conf is accessible from the host's side.\r\nIn that case you still can use ext to upload your extensions without having a \r\nTYPO3 installed on the host itself.\r\n\r\nSynchronize your docs\r\n---------------------\r\n\r\nYou can set the same version into your docs, which appears in TER. The classical\r\nuploader sets the version during upload and your docs version is behind. With\r\next the setting of the version and the upload are two different steps. \r\n\r\nYou can render your docs with a private script in between with the selected version.\r\n\r\nA command to install the version from ext_emconf.php into manual.sxw isn't available \r\nyet. It would be an idea for a module.\r\n\r\nHow to use it?\r\n==============\r\n\r\nIn the first steps you store all requied values into the array of ext_emconf.php.\r\nYou also set your username for ter and the new version to use. \r\nIn the final step you call the upload command with your password. \r\nDon't store you password into ext_empconf.php. ;)\r\n\r\nExt magically detects, when you are inside an extension, even if you work in \r\na subdirectory of it. It knows the path to ext_emconf.php automatically. \r\nFor scripting it means, that you must first chdir into the extension.\r\n\r\nTODO\r\n====\r\n\r\n  * Interactive password input.\r\n  * Add more TER features.\r\n  * Test it on windows.\r\n  * Document how to contribute modules.\r\n\r\nWanted\r\n======\r\n\r\n  * Testers\r\n  * Issus\r\n  * Pull requests\r\n  * Modules, that extend the functionality \r\n\r\n \r\nHave fun!\r\n\r\nYours, Elmar\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}